{
  "address": "0xaE8afcd6cB936E65DA62e405c624BE59B1FE47EE",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "lockupContractAddress_",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "beneficiary_",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "unlockTime_",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "deployer_",
          "type": "address"
        }
      ],
      "name": "LockupContractDeployedThroughFactory",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "shadyTokenAddress_",
          "type": "address"
        }
      ],
      "name": "SHADYTokenAddressSet",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "NAME",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_beneficiary",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_unlockTime",
          "type": "uint256"
        }
      ],
      "name": "deployLockupContract",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_contractAddress",
          "type": "address"
        }
      ],
      "name": "isRegisteredLockup",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "lockupContractToDeployer",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_shadyTokenAddress",
          "type": "address"
        }
      ],
      "name": "setSHADYTokenAddress",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "shadyTokenAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x25eb47641f501631b556091dfe3c443d7b0a653061f78cd105318471c06e695a",
  "receipt": {
    "to": null,
    "from": "0x88888887C3ebD4a33E34a15Db4254C74C75E5D4A",
    "contractAddress": "0xaE8afcd6cB936E65DA62e405c624BE59B1FE47EE",
    "transactionIndex": 11,
    "gasUsed": "789937",
    "logsBloom": "0x00000000000000000000000000000000000000000000000100800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000080000000000000000000001000000000000000000000020000000000000020000000000000000000800000000000000000000000000000000404000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000000000",
    "blockHash": "0xb20276f4905855c9fa38e8dc25a0107465d6438167d316d9c0ff04dbcda42426",
    "transactionHash": "0x25eb47641f501631b556091dfe3c443d7b0a653061f78cd105318471c06e695a",
    "logs": [
      {
        "transactionIndex": 11,
        "blockNumber": 9518042,
        "transactionHash": "0x25eb47641f501631b556091dfe3c443d7b0a653061f78cd105318471c06e695a",
        "address": "0xaE8afcd6cB936E65DA62e405c624BE59B1FE47EE",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x00000000000000000000000088888887c3ebd4a33e34a15db4254c74c75e5d4a"
        ],
        "data": "0x",
        "logIndex": 29,
        "blockHash": "0xb20276f4905855c9fa38e8dc25a0107465d6438167d316d9c0ff04dbcda42426"
      }
    ],
    "blockNumber": 9518042,
    "cumulativeGasUsed": "2098835",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "4ec6f9376f02b1b14c8f28d3638a109e",
  "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"lockupContractAddress_\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"beneficiary_\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"unlockTime_\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"deployer_\",\"type\":\"address\"}],\"name\":\"LockupContractDeployedThroughFactory\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"shadyTokenAddress_\",\"type\":\"address\"}],\"name\":\"SHADYTokenAddressSet\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"NAME\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_beneficiary\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_unlockTime\",\"type\":\"uint256\"}],\"name\":\"deployLockupContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_contractAddress\",\"type\":\"address\"}],\"name\":\"isRegisteredLockup\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"lockupContractToDeployer\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_shadyTokenAddress\",\"type\":\"address\"}],\"name\":\"setSHADYTokenAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"shadyTokenAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/LockupContractFactory.sol\":\"LockupContractFactory\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\\n}\\n\",\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/extensions/IERC20Permit.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\\n *\\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\\n * need to send a transaction, and thus is not required to hold Ether at all.\\n */\\ninterface IERC20Permit {\\n    /**\\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\\n     * given ``owner``'s signed approval.\\n     *\\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\\n     * ordering also apply here.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `deadline` must be a timestamp in the future.\\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\\n     * over the EIP712-formatted function arguments.\\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\\n     *\\n     * For more information on the signature format, see the\\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\\n     * section].\\n     */\\n    function permit(\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) external;\\n\\n    /**\\n     * @dev Returns the current nonce for `owner`. This value must be\\n     * included whenever a signature is generated for {permit}.\\n     *\\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\\n     * prevents a signature from being used multiple times.\\n     */\\n    function nonces(address owner) external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\\n     */\\n    // solhint-disable-next-line func-name-mixedcase\\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0xec63854014a5b4f2b3290ab9103a21bdf902a508d0f41a8573fea49e98bf571a\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"contracts/LockupContract.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.19;\\n\\nimport \\\"./interfaces/ISHADYToken.sol\\\";\\n\\n// https://github.com/liquity/dev/blob/main/packages/contracts/contracts/LQTY/LockupContract.sol\\ncontract LockupContract {\\n    // --- Data ---\\n    string constant public NAME = \\\"LockupContract\\\";\\n\\n    uint constant internal SECONDS_IN_ONE_YEAR = 31536000;\\n\\n    address public immutable beneficiary;\\n\\n    ISHADYToken public shadyToken;\\n\\n    // Unlock time is the Unix point in time at which the beneficiary can withdraw.\\n    uint public unlockTime;\\n\\n    // --- Events ---\\n\\n    event LockupContractCreated(address _beneficiary, uint _unlockTime);\\n    event LockupContractEmptied(uint _SHADYwithdrawal);\\n\\n    // --- Functions ---\\n\\n    constructor(\\n        address _shadyTokenAddress,\\n        address _beneficiary, \\n        uint _unlockTime\\n    ) {\\n        shadyToken = ISHADYToken(_shadyTokenAddress);\\n\\n        /*\\n        * Set the unlock time to a chosen instant in the future, as long as it is at least 1 year after\\n        * the system was deployed \\n        */\\n        _requireUnlockTimeIsAtLeastOneYearAfterSystemDeployment(_unlockTime);\\n        unlockTime = _unlockTime;\\n        \\n        beneficiary = _beneficiary;\\n        emit LockupContractCreated(_beneficiary, _unlockTime);\\n    }\\n\\n    function withdrawSHADY() external {\\n        _requireCallerIsBeneficiary();\\n        _requireLockupDurationHasPassed();\\n\\n        ISHADYToken shadyTokenCached = shadyToken;\\n        uint SHADYBalance = shadyTokenCached.balanceOf(address(this));\\n        require(shadyTokenCached.transfer(beneficiary, SHADYBalance));\\n        emit LockupContractEmptied(SHADYBalance);\\n    }\\n\\n    // --- 'require' functions ---\\n\\n    function _requireCallerIsBeneficiary() internal view {\\n        require(msg.sender == beneficiary, \\\"LockupContract: caller is not the beneficiary\\\");\\n    }\\n\\n    function _requireLockupDurationHasPassed() internal view {\\n        require(block.timestamp >= unlockTime, \\\"LockupContract: The lockup duration must have passed\\\");\\n    }\\n\\n    function _requireUnlockTimeIsAtLeastOneYearAfterSystemDeployment(uint _unlockTime) internal view {\\n        uint systemDeploymentTime = shadyToken.getDeploymentStartTime();\\n        require(_unlockTime >= systemDeploymentTime + SECONDS_IN_ONE_YEAR, \\\"LockupContract: unlock time must be at least one year after system deployment\\\");\\n    }\\n}\\n\",\"keccak256\":\"0x39d462da4f9d22e704fba63da07522fc85c7d5d9cedc85a6a0a601ef0c437ada\",\"license\":\"MIT\"},\"contracts/LockupContractFactory.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.19;\\n\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\nimport \\\"./dependencies/CheckContract.sol\\\";\\nimport \\\"./interfaces/ILockupContractFactory.sol\\\";\\nimport \\\"./LockupContract.sol\\\";\\n\\n// https://github.com/liquity/dev/blob/main/packages/contracts/contracts/LQTY/LockupContractFactory.sol\\ncontract LockupContractFactory is ILockupContractFactory, Ownable, CheckContract {\\n    // --- Data ---\\n    string constant public NAME = \\\"LockupContractFactory\\\";\\n    uint constant internal SECONDS_IN_ONE_YEAR = 31536000;\\n\\n    address public shadyTokenAddress;\\n    mapping (address => address) public lockupContractToDeployer;\\n\\n    // --- Functions ---\\n\\n    function setSHADYTokenAddress(address _shadyTokenAddress) external override onlyOwner {\\n        _checkContract(_shadyTokenAddress);\\n\\n        shadyTokenAddress = _shadyTokenAddress;\\n        emit SHADYTokenAddressSet(_shadyTokenAddress);\\n\\n        renounceOwnership();\\n    }\\n\\n    function deployLockupContract(address _beneficiary, uint _unlockTime) external override {\\n        address shadyTokenAddressCached = shadyTokenAddress;\\n        _requireSHADYAddressIsSet(shadyTokenAddressCached);\\n        LockupContract lockupContract = new LockupContract(shadyTokenAddressCached, _beneficiary, _unlockTime);\\n\\n        lockupContractToDeployer[address(lockupContract)] = msg.sender;\\n        emit LockupContractDeployedThroughFactory(address(lockupContract), _beneficiary, _unlockTime, msg.sender);\\n    }\\n\\n    function isRegisteredLockup(address _contractAddress) public view override returns (bool) {\\n        return lockupContractToDeployer[_contractAddress] != address(0);\\n    }\\n\\n    // --- 'require'  functions ---\\n    function _requireSHADYAddressIsSet(address _shadyTokenAddress) internal pure {\\n        require(_shadyTokenAddress != address(0), \\\"LCF: SHADY address is not set\\\");\\n    }\\n}\\n\",\"keccak256\":\"0x4c2df76343e4a34be47470998565290c32ac3f4b44b13a8ace92cfc3454791ca\",\"license\":\"MIT\"},\"contracts/dependencies/CheckContract.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.19;\\n\\ncontract CheckContract {\\n    /**\\n     * Check that the account is an already deployed non-destroyed contract.\\n     */\\n    function _checkContract(address account_) internal view {\\n        require(account_ != address(0), \\\"Account cannot be zero address\\\");\\n\\n        uint256 size;\\n        // solhint-disable-next-line no-inline-assembly\\n        assembly { size := extcodesize(account_) }\\n        require(size > 0, \\\"Account code size cannot be zero\\\");\\n    }\\n}\\n\",\"keccak256\":\"0x6282e853a7b31ee8bbbb4008869300bf900f7f43610f5b4be9499d40549b207a\",\"license\":\"MIT\"},\"contracts/interfaces/ILockupContractFactory.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.19;\\n    \\ninterface ILockupContractFactory {\\n    \\n    // --- Events ---\\n\\n    event SHADYTokenAddressSet(address shadyTokenAddress_);\\n    event LockupContractDeployedThroughFactory(address lockupContractAddress_, address beneficiary_, uint unlockTime_, address deployer_);\\n\\n    // --- Functions ---\\n\\n    function setSHADYTokenAddress(address shadyTokenAddress_) external;\\n\\n    function deployLockupContract(address beneficiary_, uint unlockTime_) external;\\n\\n    function isRegisteredLockup(address addr_) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x64c26f7bea8d94e0fb2aeb76d3672e6f2eab80a72574f30bdbc43a2b85d87097\",\"license\":\"MIT\"},\"contracts/interfaces/ISHADYToken.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.19;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\\\";\\n\\ninterface ISHADYToken is IERC20, IERC20Permit {\\n    // --- Events ---\\n\\n    event CommunityIssuanceAddressSet(address communityIssuanceAddress);\\n    event VeAddressSet(address veAddress);\\n    event LockupContractFactoryAddressSet(address lockupContractFactoryAddress);\\n\\n    // --- Functions ---\\n\\n    function getDeploymentStartTime() external view returns (uint);\\n}\\n\",\"keccak256\":\"0x0bbd59d283d2bb3fe7e414bf7b72803221212720bd012f56d585470781e3b662\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5061001a3361001f565b61006f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b610ce48061007e6000396000f3fe608060405234801561001057600080fd5b50600436106100835760003560e01c806334c44b4d14610088578063715018a61461009d57806374e9d449146100a55780638da5cb5b146100d5578063a3f4df7e146100e6578063bb7603f114610127578063d83c72db14610165578063e8e787111461018e578063f2fde38b146101a1575b600080fd5b61009b610096366004610562565b6101b4565b005b61009b610294565b6001546100b8906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6000546001600160a01b03166100b8565b61011a604051806040016040528060158152602001744c6f636b7570436f6e7472616374466163746f727960581b81525081565b6040516100cc919061058c565b6101556101353660046105da565b6001600160a01b0390811660009081526002602052604090205416151590565b60405190151581526020016100cc565b6100b86101733660046105da565b6002602052600090815260409020546001600160a01b031681565b61009b61019c3660046105da565b6102a8565b61009b6101af3660046105da565b610315565b6001546001600160a01b03166101c981610390565b60008184846040516101da90610539565b6001600160a01b0393841681529290911660208301526040820152606001604051809103906000f080158015610214573d6000803e3d6000fd5b506001600160a01b0381811660008181526002602090815260409182902080546001600160a01b03191633908117909155825193845293891690830152810186905260608101919091529091507ff534ff9ac4abb71a4aa2f8715f3a8f41c05155fbf8af61daecc51365e3a5c0089060800160405180910390a150505050565b61029c6103e6565b6102a66000610440565b565b6102b06103e6565b6102b981610490565b600180546001600160a01b0319166001600160a01b0383169081179091556040519081527f9b259e146c2867d904f1e19936caa92e357539c679b78fb96c0a0b15160b7d189060200160405180910390a1610312610294565b50565b61031d6103e6565b6001600160a01b0381166103875760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084015b60405180910390fd5b61031281610440565b6001600160a01b0381166103125760405162461bcd60e51b815260206004820152601d60248201527f4c43463a2053484144592061646472657373206973206e6f7420736574000000604482015260640161037e565b6000546001600160a01b031633146102a65760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161037e565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b0381166104e65760405162461bcd60e51b815260206004820152601e60248201527f4163636f756e742063616e6e6f74206265207a65726f20616464726573730000604482015260640161037e565b803b806105355760405162461bcd60e51b815260206004820181905260248201527f4163636f756e7420636f64652073697a652063616e6e6f74206265207a65726f604482015260640161037e565b5050565b6106b2806105fd83390190565b80356001600160a01b038116811461055d57600080fd5b919050565b6000806040838503121561057557600080fd5b61057e83610546565b946020939093013593505050565b600060208083528351808285015260005b818110156105b95785810183015185820160400152820161059d565b506000604082860101526040601f19601f8301168501019250505092915050565b6000602082840312156105ec57600080fd5b6105f582610546565b939250505056fe60a060405234801561001057600080fd5b506040516106b23803806106b283398101604081905261002f916101df565b600080546001600160a01b0319166001600160a01b038516179055610053816100a8565b60018190556001600160a01b038216608081905260408051918252602082018390527f5faee922186516bf77266643c1fda130acefc439d571400e8697106c6aed9b54910160405180910390a150505061025b565b60008060009054906101000a90046001600160a01b03166001600160a01b0316633c84b7c26040518163ffffffff1660e01b8152600401602060405180830381865afa1580156100fc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610120919061021b565b90506101306301e1338082610234565b8210156101bf5760405162461bcd60e51b815260206004820152604d60248201527f4c6f636b7570436f6e74726163743a20756e6c6f636b2074696d65206d75737460448201527f206265206174206c65617374206f6e652079656172206166746572207379737460648201526c195b4819195c1b1bde5b595b9d609a1b608482015260a40160405180910390fd5b5050565b80516001600160a01b03811681146101da57600080fd5b919050565b6000806000606084860312156101f457600080fd5b6101fd846101c3565b925061020b602085016101c3565b9150604084015190509250925092565b60006020828403121561022d57600080fd5b5051919050565b8082018082111561025557634e487b7160e01b600052601160045260246000fd5b92915050565b60805161042f610283600039600081816087015281816101a50152610270015261042f6000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c8063251c1aa31461005c57806328c2b8d01461007857806338af3eed1461008257806356061388146100c1578063a3f4df7e146100d4575b600080fd5b61006560015481565b6040519081526020015b60405180910390f35b61008061010e565b005b6100a97f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b03909116815260200161006f565b6000546100a9906001600160a01b031681565b6101016040518060400160405280600e81526020016d131bd8dadd5c10dbdb9d1c9858dd60921b81525081565b60405161006f9190610369565b610116610265565b61011e6102fa565b600080546040516370a0823160e01b81523060048201526001600160a01b03909116919082906370a0823190602401602060405180830381865afa15801561016a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061018e91906103b7565b60405163a9059cbb60e01b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081166004830152602482018390529192509083169063a9059cbb906044016020604051808303816000875af1158015610201573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061022591906103d0565b61022e57600080fd5b6040518181527f7d17cbc0f78ccfed33842dd29dab2872e8347bf3981293ab2cfe35ca16371a2f9060200160405180910390a15050565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146102f85760405162461bcd60e51b815260206004820152602d60248201527f4c6f636b7570436f6e74726163743a2063616c6c6572206973206e6f7420746860448201526c652062656e656669636961727960981b60648201526084015b60405180910390fd5b565b6001544210156102f85760405162461bcd60e51b815260206004820152603460248201527f4c6f636b7570436f6e74726163743a20546865206c6f636b75702064757261746044820152731a5bdb881b5d5cdd081a185d99481c185cdcd95960621b60648201526084016102ef565b600060208083528351808285015260005b818110156103965785810183015185820160400152820161037a565b506000604082860101526040601f19601f8301168501019250505092915050565b6000602082840312156103c957600080fd5b5051919050565b6000602082840312156103e257600080fd5b815180151581146103f257600080fd5b939250505056fea2646970667358221220fdbafb5eec4362d29479bd55384ef7ae3a319d8f07b85e132dde915fd4b7f40a64736f6c63430008130033a2646970667358221220de2e0155c6d67a149dd6b921d8442d328e0ec440787b469f00beae259c8aecd164736f6c63430008130033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100835760003560e01c806334c44b4d14610088578063715018a61461009d57806374e9d449146100a55780638da5cb5b146100d5578063a3f4df7e146100e6578063bb7603f114610127578063d83c72db14610165578063e8e787111461018e578063f2fde38b146101a1575b600080fd5b61009b610096366004610562565b6101b4565b005b61009b610294565b6001546100b8906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6000546001600160a01b03166100b8565b61011a604051806040016040528060158152602001744c6f636b7570436f6e7472616374466163746f727960581b81525081565b6040516100cc919061058c565b6101556101353660046105da565b6001600160a01b0390811660009081526002602052604090205416151590565b60405190151581526020016100cc565b6100b86101733660046105da565b6002602052600090815260409020546001600160a01b031681565b61009b61019c3660046105da565b6102a8565b61009b6101af3660046105da565b610315565b6001546001600160a01b03166101c981610390565b60008184846040516101da90610539565b6001600160a01b0393841681529290911660208301526040820152606001604051809103906000f080158015610214573d6000803e3d6000fd5b506001600160a01b0381811660008181526002602090815260409182902080546001600160a01b03191633908117909155825193845293891690830152810186905260608101919091529091507ff534ff9ac4abb71a4aa2f8715f3a8f41c05155fbf8af61daecc51365e3a5c0089060800160405180910390a150505050565b61029c6103e6565b6102a66000610440565b565b6102b06103e6565b6102b981610490565b600180546001600160a01b0319166001600160a01b0383169081179091556040519081527f9b259e146c2867d904f1e19936caa92e357539c679b78fb96c0a0b15160b7d189060200160405180910390a1610312610294565b50565b61031d6103e6565b6001600160a01b0381166103875760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084015b60405180910390fd5b61031281610440565b6001600160a01b0381166103125760405162461bcd60e51b815260206004820152601d60248201527f4c43463a2053484144592061646472657373206973206e6f7420736574000000604482015260640161037e565b6000546001600160a01b031633146102a65760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161037e565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b0381166104e65760405162461bcd60e51b815260206004820152601e60248201527f4163636f756e742063616e6e6f74206265207a65726f20616464726573730000604482015260640161037e565b803b806105355760405162461bcd60e51b815260206004820181905260248201527f4163636f756e7420636f64652073697a652063616e6e6f74206265207a65726f604482015260640161037e565b5050565b6106b2806105fd83390190565b80356001600160a01b038116811461055d57600080fd5b919050565b6000806040838503121561057557600080fd5b61057e83610546565b946020939093013593505050565b600060208083528351808285015260005b818110156105b95785810183015185820160400152820161059d565b506000604082860101526040601f19601f8301168501019250505092915050565b6000602082840312156105ec57600080fd5b6105f582610546565b939250505056fe60a060405234801561001057600080fd5b506040516106b23803806106b283398101604081905261002f916101df565b600080546001600160a01b0319166001600160a01b038516179055610053816100a8565b60018190556001600160a01b038216608081905260408051918252602082018390527f5faee922186516bf77266643c1fda130acefc439d571400e8697106c6aed9b54910160405180910390a150505061025b565b60008060009054906101000a90046001600160a01b03166001600160a01b0316633c84b7c26040518163ffffffff1660e01b8152600401602060405180830381865afa1580156100fc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610120919061021b565b90506101306301e1338082610234565b8210156101bf5760405162461bcd60e51b815260206004820152604d60248201527f4c6f636b7570436f6e74726163743a20756e6c6f636b2074696d65206d75737460448201527f206265206174206c65617374206f6e652079656172206166746572207379737460648201526c195b4819195c1b1bde5b595b9d609a1b608482015260a40160405180910390fd5b5050565b80516001600160a01b03811681146101da57600080fd5b919050565b6000806000606084860312156101f457600080fd5b6101fd846101c3565b925061020b602085016101c3565b9150604084015190509250925092565b60006020828403121561022d57600080fd5b5051919050565b8082018082111561025557634e487b7160e01b600052601160045260246000fd5b92915050565b60805161042f610283600039600081816087015281816101a50152610270015261042f6000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c8063251c1aa31461005c57806328c2b8d01461007857806338af3eed1461008257806356061388146100c1578063a3f4df7e146100d4575b600080fd5b61006560015481565b6040519081526020015b60405180910390f35b61008061010e565b005b6100a97f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b03909116815260200161006f565b6000546100a9906001600160a01b031681565b6101016040518060400160405280600e81526020016d131bd8dadd5c10dbdb9d1c9858dd60921b81525081565b60405161006f9190610369565b610116610265565b61011e6102fa565b600080546040516370a0823160e01b81523060048201526001600160a01b03909116919082906370a0823190602401602060405180830381865afa15801561016a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061018e91906103b7565b60405163a9059cbb60e01b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081166004830152602482018390529192509083169063a9059cbb906044016020604051808303816000875af1158015610201573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061022591906103d0565b61022e57600080fd5b6040518181527f7d17cbc0f78ccfed33842dd29dab2872e8347bf3981293ab2cfe35ca16371a2f9060200160405180910390a15050565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146102f85760405162461bcd60e51b815260206004820152602d60248201527f4c6f636b7570436f6e74726163743a2063616c6c6572206973206e6f7420746860448201526c652062656e656669636961727960981b60648201526084015b60405180910390fd5b565b6001544210156102f85760405162461bcd60e51b815260206004820152603460248201527f4c6f636b7570436f6e74726163743a20546865206c6f636b75702064757261746044820152731a5bdb881b5d5cdd081a185d99481c185cdcd95960621b60648201526084016102ef565b600060208083528351808285015260005b818110156103965785810183015185820160400152820161037a565b506000604082860101526040601f19601f8301168501019250505092915050565b6000602082840312156103c957600080fd5b5051919050565b6000602082840312156103e257600080fd5b815180151581146103f257600080fd5b939250505056fea2646970667358221220fdbafb5eec4362d29479bd55384ef7ae3a319d8f07b85e132dde915fd4b7f40a64736f6c63430008130033a2646970667358221220de2e0155c6d67a149dd6b921d8442d328e0ec440787b469f00beae259c8aecd164736f6c63430008130033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 590,
        "contract": "contracts/LockupContractFactory.sol:LockupContractFactory",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 7398,
        "contract": "contracts/LockupContractFactory.sol:LockupContractFactory",
        "label": "shadyTokenAddress",
        "offset": 0,
        "slot": "1",
        "type": "t_address"
      },
      {
        "astId": 7402,
        "contract": "contracts/LockupContractFactory.sol:LockupContractFactory",
        "label": "lockupContractToDeployer",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_address,t_address)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_address)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => address)",
        "numberOfBytes": "32",
        "value": "t_address"
      }
    }
  }
}